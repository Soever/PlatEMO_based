function [Xnewm,Xnewf] = improved_exploitation_food_cold(t1,t2,Nm,Nf,dim,C3,Q,Xbest_m,Xbest_f,Xm,Xf,lb,ub)
    fitness_m = Xm.objs ;
    fitness_f = Xf.objs ;
    fitnessBest_m = Xbest_m.obj ;
    fitnessBest_f = Xbest_f.obj ;
    if rand>0.6 %fight
        for i=1:Nm
            for j=1:1:dim
                FM=exp(-(fitnessBest_f)/(fitness_m(i)+eps));%eq.(13)
                Xnewm(i,j)=t1*Xm(i).dec(j) +C3*FM*rand*(Q*Xbest_f.dec(j)-Xm(i).dec(j));%eq.(11)
            end
        end
        for i=1:Nf
            for j=1:1:dim
                FF=exp(-(fitnessBest_m)/(fitness_f(i)+eps));%eq.(14)
                Xnewf(i,j)=t2*Xf(i).dec(j)+C3*FF*rand*(Q*Xbest_m.dec(j)-Xf(i).dec(j));%eq.(12)
            end
        end
    else%mating
        for i=1:Nm
            for j=1:1:dim
                Mm=exp(-fitness_f(i)/(fitness_m(i)+eps));%eq.(17)
                Xnewm(i,j)=Xm(i).dec(j) +C3*rand*Mm*(Q*Xf(i).dec(j)-Xm(i).dec(j));%eq.(15
            end
        end
        for i=1:Nf
            for j=1:1:dim
                Mf=exp(-fitness_m(i)/(fitness_f(i)+eps));%eq.(18)
                Xnewf(i,j)=Xf(i).dec(j)+C3*rand*Mf*(Q*Xm(i).dec(j)-Xf(i).dec(j));%eq.(16)
            end
        end
        
        [~, index]=sort(fitness_m);

        [~, index1]= sort(fitness_f);%排序

        Xnewm(index(end-3),:)=lb+rand*(ub-lb);
        Xnewm(index(end-2),:)=lb+rand*(ub-lb);
        Xnewm(index(end-1),:)=lb+rand*(ub-lb);
        Xnewm(index(end),:)=lb+rand*(ub-lb);
        Xnewf(index1(end-3),:)=lb+rand*(ub-lb);
        Xnewf(index1(end-1),:)=lb+rand*(ub-lb);
        Xnewf(index1(end-2),:)=lb+rand*(ub-lb);
        Xnewf(index1(end),:)=lb+rand*(ub-lb);
            


    end
end

